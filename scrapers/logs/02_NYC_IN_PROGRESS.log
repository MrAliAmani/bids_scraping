**********************
Windows PowerShell transcript start
Start time: 20250122040459
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 04:04:56" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "04:04:56")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 31132
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 04:04:56
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[04:05:01] Bids Extraction Started
[04:05:01] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS D:\PPH\web-scraping>
PS D:\PPH\web-scraping>
**********************
Windows PowerShell transcript start
Start time: 20250122042953
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 04:29:50" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 2 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "04:29:50")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 32844
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 04:29:50
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[04:29:55] Bids Extraction Started
[04:29:55] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
[04:30:00] Browser initialized
[04:30:00] Attempting login (attempt 1)
[04:30:00] Attempting to log in...
[04:30:56]
Login failed: Message: no such window: target window already closed
[04:30:56] from unknown error: web view not found
[04:30:56]   (Session info: chrome=131.0.6778.266)
[04:30:56] Stacktrace:
[04:30:56] 	GetHandleVerifier [0x007BFD53+23747]
[04:30:56] 	(No symbol) [0x00747D54]
[04:30:56] 	(No symbol) [0x0061BE53]
[04:30:56] 	(No symbol) [0x005FD91B]
[04:30:56] 	(No symbol) [0x00687EFF]
[04:30:56] 	(No symbol) [0x0069AD49]
[04:30:56] 	(No symbol) [0x00681B96]
[04:30:56] 	(No symbol) [0x00653F3C]
[04:30:56] 	(No symbol) [0x00654EBD]
[04:30:56] 	GetHandleVerifier [0x00A9AC73+3017699]
[04:30:56] 	GetHandleVerifier [0x00AAB93B+3086507]
[04:30:56] 	GetHandleVerifier [0x00AA40F2+3055714]
[04:30:56] 	GetHandleVerifier [0x00855AF0+637536]
[04:30:56] 	(No symbol) [0x00750A5D]
[04:30:56] 	(No symbol) [0x0074DA28]
[04:30:56] 	(No symbol) [0x0074DBC5]
[04:30:56] 	(No symbol) [0x007407F0]
[04:30:56] 	BaseThreadInitThunk [0x75625D49+25]
[04:30:56] 	RtlInitializeExceptionChain [0x770ACEBB+107]
[04:30:56] 	RtlGetAppContainerNamedObjectPath [0x770ACE41+561]
[04:30:56]
[04:30:56]
Error during scraping: Message: no such window: target window already closed
[04:30:56] from unknown error: web view not found
[04:30:56]   (Session info: chrome=131.0.6778.266)
[04:30:56] Stacktrace:
[04:30:56] 	GetHandleVerifier [0x007BFD53+23747]
[04:30:56] 	(No symbol) [0x00747D54]
[04:30:56] 	(No symbol) [0x0061BE53]
[04:30:56] 	(No symbol) [0x005FD91B]
[04:30:56] 	(No symbol) [0x00687EFF]
[04:30:56] 	(No symbol) [0x0069AD49]
[04:30:56] 	(No symbol) [0x00681B96]
[04:30:56] 	(No symbol) [0x00653F3C]
[04:30:56] 	(No symbol) [0x00654EBD]
[04:30:56] 	GetHandleVerifier [0x00A9AC73+3017699]
[04:30:56] 	GetHandleVerifier [0x00AAB93B+3086507]
[04:30:56] 	GetHandleVerifier [0x00AA40F2+3055714]
[04:30:56] 	GetHandleVerifier [0x00855AF0+637536]
[04:30:56] 	(No symbol) [0x00750A5D]
[04:30:56] 	(No symbol) [0x0074DA28]
[04:30:56] 	(No symbol) [0x0074DBC5]
[04:30:56] 	(No symbol) [0x007407F0]
[04:30:56] 	BaseThreadInitThunk [0x75625D49+25]
[04:30:56] 	RtlInitializeExceptionChain [0x770ACEBB+107]
[04:30:56] 	RtlGetAppContainerNamedObjectPath [0x770ACE41+561]
[04:30:56]
**********************
Windows PowerShell transcript start
Start time: 20250122102959
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 10:29:55" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "10:29:55")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 1376
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 10:29:55
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[10:30:00] Bids Extraction Started
[10:30:00] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
[10:30:04] Browser initialized
[10:30:04] Attempting login (attempt 1)
[10:30:04] Attempting to log in...
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS D:\PPH\web-scraping>
**********************
Windows PowerShell transcript start
Start time: 20250122104045
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 10:40:43" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "10:40:43")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 32808
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 10:40:43
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[10:40:46] Bids Extraction Started
[10:40:46] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
[10:40:51] Browser initialized
[10:40:51] Attempting login (attempt 1)
[10:40:51] Attempting to log in...
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS D:\PPH\web-scraping>
**********************
Windows PowerShell transcript start
Start time: 20250122105053
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 10:50:50" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "10:50:50")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 21408
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 10:50:50
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[10:50:54] Bids Extraction Started
[10:50:54] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
[10:50:58] Browser initialized
[10:50:58] Attempting login (attempt 1)
[10:50:58] Attempting to log in...
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS D:\PPH\web-scraping>
﻿**********************
Windows PowerShell transcript start
Start time: 20250122105954
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 10:59:50" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "10:59:50")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 30516
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 10:59:50
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[10:59:57] Bids Extraction Started
[10:59:57] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
**********************
Windows PowerShell transcript start
Start time: 20250122110224
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 11:02:21" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "11:02:21")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 24224
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 11:02:21
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[11:02:25] Bids Extraction Started
[11:02:25] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
[11:02:30] Browser initialized
[11:02:30] Attempting login (attempt 1)
[11:02:30] Attempting to log in...
**********************
Windows PowerShell transcript start
Start time: 20250122110507
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 11:05:04" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "11:05:04")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 20604
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 11:05:04
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[11:05:08] Bids Extraction Started
[11:05:08] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
[11:05:13] Browser initialized
[11:05:13] Attempting login (attempt 1)
[11:05:13] Attempting to log in...
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS D:\PPH\web-scraping>
﻿**********************
Windows PowerShell transcript start
Start time: 20250122111617
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 11:16:14" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "11:16:14")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 14408
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 11:16:14
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[11:16:18] Bids Extraction Started
[11:16:18] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
[11:16:22] Browser initialized
[11:16:22] Attempting login (attempt 1)
[11:16:22] Attempting to log in...
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS D:\PPH\web-scraping>
﻿**********************
Windows PowerShell transcript start
Start time: 20250122112525
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 11:25:22" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "11:25:22")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 26948
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 11:25:22
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[11:25:26] Bids Extraction Started
[11:25:26] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
[11:25:31] Browser initialized
[11:25:31] Attempting login (attempt 1)
[11:25:31] Attempting to log in...
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS D:\PPH\web-scraping>
**********************
Windows PowerShell transcript start
Start time: 20250122114618
Username: DESKTOP-IO2J2VQ\AliAmani
RunAs User: DESKTOP-IO2J2VQ\AliAmani
Configuration Name: 
Machine: DESKTOP-IO2J2VQ (Microsoft Windows NT 10.0.26100.0)
Host Application: powershell -NoExit -Command [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; [Console]::InputEncoding = [System.Text.Encoding]::UTF8; $OutputEncoding = [System.Text.Encoding]::UTF8; $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py"; Start-Transcript -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -Append; Write-Host "`n=== Scraper Status ===" -ForegroundColor Cyan; Write-Host "Script: 02_NYC.py" -ForegroundColor Yellow; Write-Host "Status: Running" -ForegroundColor Green; Write-Host "Start Time: 11:46:15" -ForegroundColor Yellow; Write-Host "Log File: scrapers\logs\02_NYC_IN_PROGRESS.log" -ForegroundColor Cyan; Write-Host "==============================`n"; function Format-ScraperOutput {     param($Message)     $timestamp = Get-Date -Format "HH:mm:ss";     if ($Message -match "^ERROR|FAILED|CRITICAL") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Red;     }     elseif ($Message -match "^WARNING") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Yellow;     }     elseif ($Message -match "^SUCCESS|COMPLETED|✓") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Green;     }     elseif ($Message -match "^INFO|PROGRESS") {         Write-Host "[$timestamp] " -NoNewline;         Write-Host $Message -ForegroundColor Cyan;     }     else {         Write-Host "[$timestamp] $Message";     } }; & "C:\Users\AliAmani\Miniconda3\envs\bids\python.exe" "scrapers/02_NYC.py" --days 1 2>&1 | ForEach-Object {     Format-ScraperOutput $_;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Running..."; }; $exitCode = $LASTEXITCODE; Stop-Transcript; if ($exitCode -eq 0) {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_COMPLETED.log" -Force; } else {     Rename-Item -Path "scrapers\logs\02_NYC_IN_PROGRESS.log" -NewName "scrapers\logs\02_NYC_FAILED.log" -Force; } Write-Host "`n=== Final Status ===" -ForegroundColor Cyan; Write-Host "End Time: " -NoNewline; Write-Host $(Get-Date -Format "HH:mm:ss") -ForegroundColor Yellow; Write-Host "Duration: " -NoNewline; Write-Host $([math]::Round(((Get-Date) - (Get-Date "11:46:15")).TotalMinutes, 2)) -NoNewline -ForegroundColor Yellow; Write-Host " minutes"; if ($exitCode -eq 0) {     Write-Host "Status: " -NoNewline;     Write-Host "Completed Successfully" -ForegroundColor Green;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Completed ✓"; } else {     Write-Host "Status: " -NoNewline;     Write-Host "Failed" -ForegroundColor Red;     $host.ui.RawUI.WindowTitle = "Scraper - 02_NYC.py - Failed ✗";     Write-Host "Exit Code: $exitCode" -ForegroundColor Red; } Write-Host "==============================" -ForegroundColor Cyan; exit $exitCode; 
Process ID: 19872
PSVersion: 5.1.26100.2161
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.26100.2161
BuildVersion: 10.0.26100.2161
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is scrapers\logs\02_NYC_IN_PROGRESS.log

=== Scraper Status ===
Script: 02_NYC.py
Status: Running
Start Time: 11:46:15
Log File: scrapers\logs\02_NYC_IN_PROGRESS.log
==============================
[11:46:20] Bids Extraction Started
[11:46:20] 📁 Saving data in folder: D:\PPH\web-scraping\2025-01-21
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS D:\PPH\web-scraping>
